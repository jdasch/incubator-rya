#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
 
# Use prefix hashing for triples. Helps avoid hot-spotting. 
use.prefix.hashing=false

# Use triple pattern cardinalities for query optimization.
use.count.stats=false

# Use join selectivity for query optimization.
use.join.selectivity=false

# Use a MockAccumulo instance as back-end for Rya instance.
use.mock=false

# Display query plan during evaluation. Useful for debugging.
use.display.plan=false

# Use backward chaining inference during query evaluation.
use.inference=false

# Accumulo instance name (required)
accumulo.instance=spear_instance

# Zookeepers for underlying Accumulo instance (required if use.mock=false)
accumulo.zookeepers=zoo1.cluster.sparta.com,zoo2.cluster.sparta.com,zoo3.cluster.sparta.com,zoo4.cluster.sparta.com,zoo5.cluster.sparta.com

# Accumulo user (required)
accumulo.user=SPEAR

# Accumulo password (required)
accumulo.password=spear

# String of Accumulo authorizations.
accumulo.auths=U

# String of Accumulo visibilities assigned to ingested triples.
accumulo.visibilities=U

# Prefix for Accumulo backed Rya instance.
accumulo.rya.prefix=jdasch5_

#Use Accumulo Freetext Indexer for querying and ingest.
use.freetext=false

# Use Accumulo Entity Index for querying and ingest.
use.entity=false

# Use Accumulo Temporal Indexer for querying and ingest.
use.temporal=false

# Use PCJs for query optimization.
use.pcj=true

# Use optimal PCJ for query optimization.
use.optimal.pcj=true

# Freetext predicates used for ingest. Specify as comma delimited Strings with no spaces between.
freetext.predicates=http://pred1,http://pred2

# Temporal predicates used for ingest. Specify as comma delimited Strings with no spaces between.
temporal.predicates=http://pred3,http://pred4

# PCJ tables to be used, specified as comma delimited Strings with no spaces between. 
# If no tables are specified, all registered tables are used.
#pcj.tables=table1,table2

# Set name of Fluo App to update PCJs.
#fluo.app.name=rya_pcj_updater
fluo.app.name=jdasch5_pcj_updater

# Use Accumulo StatementMetadata index for querying Statement Properties.
use.metadata=true

# Set Statement Properties that can be queried using the StatementMetadataOptimizer.
metadata.properties urn:123,urn:456

# If true, Accumulo DAO Writers will be flushed on each update.  If false, default Accumulo configuration values for BatchWriter shall be used.
ac.dao.flush=true